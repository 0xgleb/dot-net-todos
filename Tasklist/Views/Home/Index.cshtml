@model Tasklist.Models.TaskTable

@{
    ViewBag.Title = "Index";
    var Tasks = ViewBag.Tasks;

    var baseUrl = string.Format("{0}://{1}{2}", HttpContext.Current.Request.Url.Scheme, HttpContext.Current.Request.Url.Authority, (HttpRuntime.AppDomainAppVirtualPath != "/") ? HttpRuntime.AppDomainAppVirtualPath + "/" : HttpRuntime.AppDomainAppVirtualPath);

    var UserName = ViewBag.UserName;
}

<!DOCTYPE html>

<html>
    <head>
        <title>Tasklist</title>
        <meta charset="utf-8" />
        @*<link href="#" rel="stylesheet" />*@
        <base href="@baseUrl" />
    </head>
    <body>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <fieldset>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Task)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Task)
                    @Html.ValidationMessageFor(model => model.Task)
                </div>
                <input type="submit" value="Add" />
            </fieldset>
        }

        <select autocomplete="off">
            <option value="all">All</option>
            <option value="active">Active</option>
            <option value="done">Completed</option>
        </select>

        <ul>
            @foreach (var task in Tasks)
            {
                if (task.IsPublic || task.Owner == UserName)
                {
                    if (task.IsActive)
                    {
                        <li class="1" data-id="@task.Id">
                            <input type="checkbox" autocomplete="off" class="checkbox" checked="@(!task.IsActive)" />
                            <span>@task.Task</span>
                             Owner: <span>@task.Owner</span>
                            <button>Remove</button>
                        </li>
                    }
                    else
                    {
                        <li class="0" data-id="@task.Id">
                            <input type="checkbox" autocomplete="off" class="checkbox" checked="@(!task.IsActive)" />
                            <span>@task.Task</span>
                             Owner: <span>@task.Owner</span>
                            <button>Remove</button>
                        </li>
                    }
                }
            }
        </ul>

        <script src="~/CustomScripts/core.js"></script>
        <script src="~/CustomScripts/shorten.js"></script>
        <script src="~/CustomScripts/ajax.js"></script>
        <script src="~/CustomScripts/action.js"></script>
        <script src="~/Scripts/jquery-1.8.2.js"></script>
        <script src="~/CustomScripts/main.js"></script>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
    </body>
</html>